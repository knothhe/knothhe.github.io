<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>人生即体验 | Tag: ai</title><description>All posts tagged with ai</description><link>https://blog.guanglai.me/</link><item><title>已读乱码 015 | 一场乌龙</title><link>https://blog.guanglai.me/posts/what-is-guanglai-doing-this-week-015/</link><guid isPermaLink="true">https://blog.guanglai.me/posts/what-is-guanglai-doing-this-week-015/</guid><description>这周周六见了同事介绍的女生，结果见面却发生了乌龙。周日依旧是和屠去世纪公园聊天闲逛。</description><pubDate>Sat, 14 Jun 2025 13:45:03 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://images-oss.guanglai.me/2025/996fe1a75ee7fe09e0a9a8eaf7307085.webp&quot; alt=&quot;周日世纪公园的夕阳&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这里是已读乱码的第十五期，这个周刊的名字也没有特别的含义，让 deepseek 帮我批量生成了 100 个类似的四字词语，选中的已读乱码，大概是捏他的已读乱回。起这个名字多少是看重特殊性，不太有重名的可能，以及一种自顾自的疯癫感觉。&lt;/p&gt;
&lt;p&gt;这周的天气还是偏冷的，周内天气都不太好，周六又下了下雨，周日倒是出了太阳，但是风比周六大不少，冻死个人。屠买了台尼康 Z30 相机，周日出了太阳，和他一起逛了逛世纪公园附近，顺便陪他扫街，拍拍街道，夕阳，鸽子等等，我也在考虑要不要买个相机了，屠也在怂恿我买台 Z50 二代，毕竟拍照的效果真的很棒。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images-oss.guanglai.me/2025/0950b04941d6808851006545efbe43cc.webp&quot; alt=&quot;屠使用 Z30 拍摄的世纪公园的鸽子&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;大乌龙事件&lt;/h2&gt;
&lt;p&gt;新的工作组的合作工作组的同事年前就有说介绍下他小姨子给我，让我们认识一下。最近他又有提到，上周六他把我的微信推给了他的小姨子，我们也就周六晚上简单聊了聊，约好了下如果这周末不下雨的话，就一起去徒步。之所以是徒步这项运动，是因为她几乎每周都会去徒步。&lt;/p&gt;
&lt;p&gt;周内的话就几乎没有以聊天，周五晚上又联系起来，因为周六下雨，就聊好不去徒步，找个室内的活动，她提议去海洋公园，问我去过没有，我回复是陆家嘴的那个我也有几年没去了。我觉得去一趟有人一起逛逛也是不错的。就这么约定好了，周六下午一点海洋公园门口碰面。&lt;/p&gt;
&lt;p&gt;乌龙的事件就这么发生了。第二天下午一点多，我到了陆家嘴的上海海洋水族馆门口，她说她也快到了。之后共享定位，她在海昌海洋公园，我在上海海洋水族馆，完全的大乌龙事件。最后聊了聊，还是觉得各逛各的，晚上碰面吃个饭就好。&lt;/p&gt;
&lt;h2&gt;家庭服务器&lt;/h2&gt;
&lt;p&gt;想了很久，我还是蛮想有一台自己的 home server 的，一直没动手购买是不知道购买哪些硬件比较合适。买 arm 害怕硬件兼容性有问题，某些软件跑不起来就糟糕了。买普通台式机又害怕功耗太高，要是使用上电费太高就没有必要，并且一般功耗高的机器风扇的声音也挺大的。最近看到 mac mini M4 国补下的价格的话，16G 内存、256G 硬盘的最低配置，3000 的话就比较合适，再高些我就觉得没有性价比，也没有必要。不过我看的几乎都是 4000 左右的价格，完全也蹲不到 3000 的国补价格。此外，买 mac 硬件，我还需要考虑安装 macOS 还是 linux，毕竟我还是挺想要服务器跑的是 linux 的。也怕买回来的主机如果功耗高，性能强的话，风扇会比较扰民，指我自己和室友。成品 NSA 的话，比如群晖，我觉得性价比也太低了。想来想去，就一直到拖着，现在都没买好硬件，一如我一直想的投资这件事情。&lt;/p&gt;
&lt;p&gt;不过这两天心头又起，并且研究了下论坛网友购买的硬件，和屠周日晚上吃饭的时候简单聊了聊，发现 N150 CPU、32G 内存、1 T固态，对我来说就是完美配置了。总共花费了不到 1300，虽然不如垃圾佬捡垃圾的性价比高，但是对我来说性价比相当高。功耗低，噪声小。至于网口，因为我并不考虑搭建软路由，所以单网口就足够了。其他的板载 wifi，蓝牙之类的硬件，也基本满足需求。下周应该就能到手尝试，届时我想在单独文章里聊聊，现在相当期待收到货。&lt;/p&gt;
&lt;p&gt;其实我是有一台树莓派 3b 的，不过性能实在是过于羸弱，网卡的带宽也不够大。之前只用来跑了 home assistant，挂载了一块硬盘，用 smb 服务局域网共享给其他设备访问。不过因为网卡的限制，使用效果上有些差。年前觉得似乎用处也不大，我就把这台树莓派停电收纳，不再使用。我也就没了唯一的一台 home server。&lt;/p&gt;
&lt;h2&gt;我对现今找对象的一点简单看法&lt;/h2&gt;
&lt;p&gt;找对象很多时候就像一个漏斗，先是学历漏斗，再来身高，长相，工作，工资漏斗，然后再来性格，眼缘漏斗，筛选筛选还能剩下多少人呢？个人条件越好，要求一般就越高。所以条件越好，现在就很难找对象。这点虽然反直觉，但我觉得就是当前社会现状。&lt;/p&gt;
&lt;p&gt;我觉得现在网上找对象，很看重条件，这样子先经过条件筛选一下，其实也剩下不了多少人。再之后，即使作为朋友关系条件合适，聊不聊得来是一回事，对方人品是否认可又是一回事了。所以找不到合适的对象也正常，大家都单着吧。&lt;/p&gt;
&lt;p&gt;既要也要是一件不太可能的事情。&lt;/p&gt;
&lt;h2&gt;自建服务&lt;/h2&gt;
&lt;p&gt;本周又自建了 &lt;a href=&quot;https://umami.is/&quot;&gt;umami&lt;/a&gt; 用于统计博客的访问来源，是 Google analytics 开源替代。不过搭建好之后，发现访问者确实只有我自己。&lt;/p&gt;
&lt;p&gt;搭建了 &lt;a href=&quot;https://beszel.dev/zh/&quot;&gt;Beszel&lt;/a&gt; 用于监控服务器的资源使用情况，这次也是顺利搭建成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images-oss.guanglai.me/2025/1c54bf19c0069af3eb3ec51cb4ce8fd6.webp&quot; alt=&quot;当前这台 1C1G vps 上自建服务的 docker 资源占用&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images-oss.guanglai.me/2025/cb6d53f5b32ed517a52a0f848ffd71e4.webp&quot; alt=&quot;当前这台 1C1G vps 上自建服务的物理资源占用&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;本周摘录&lt;/h2&gt;
&lt;h3&gt;macOS 的一些特别设置&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;设置 Trackpad 轻点来点按
默认情况下按下触摸板才是点按（click）。我喜欢设置成用轻点作为点按：
选择 [System Settings] &amp;gt; [Trackpad]，在 [Point &amp;amp; Click] 标签页中选中 [Tap to click]。&lt;/li&gt;
&lt;li&gt;三指拖动
我习惯于三指拖动窗口。设置方法：选择 [System Settings] &amp;gt; Accessibility] &amp;gt; [Pointer Control] &amp;gt; [Trackpad Options]，选中 [Use trackpad for dragging]，并且选择 [Dragging style] &amp;gt; [Three Finger Drag]。
设置完成后，还可以使用三指拖动的方式选择文本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;我比较喜欢上面这个设置，有了三指拖动，大部分的场景，我总算不再需要点击按下触摸板了，只需要三指轻点和拖动就可以了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/macdao/ocds-guide-to-setting-up-mac?tab=readme-ov-file&quot;&gt;macdao/ocds-guide-to-setting-up-mac: OCD&apos;s Guide to Setting up Mac&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;macOS default list&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;macOS applications and other programs use the defaults system to record user preferences and other information to be maintained when the application isn&apos;t running (font for new documents, or the position of an Info panel). Much of this information is accessible through an application&apos;s Preferences panel but sometimes they&apos;re hidden.&lt;/p&gt;
&lt;p&gt;macOS 应用程序和其他程序使用 defaults 系统记录用户首选项和其他信息，以便在应用程序不运行时进行维护（新文档的字体或信息面板的位置）。这些信息大多可通过应用程序的首选项面板访问，但有时也会隐藏起来。&lt;/p&gt;
&lt;p&gt;User defaults belong to domains, which typically correspond to individual applications. Applications, system services, and other programs have their own domains, they also share a domain named NSGlobalDomain. If a default isn&apos;t specified in the application&apos;s domain, it may be specified in NSGlobalDomain.&lt;/p&gt;
&lt;p&gt;用户默认设置属于域，通常与单个应用程序相对应。应用程序、系统服务和其他程序都有自己的域，它们还共享一个名为 NSGlobalDomain 的域。如果默认值没有在应用程序的域中指定，则可以在 NSGlobalDomain 中指定。&lt;/p&gt;
&lt;p&gt;Each domain has a dictionary of keys and values representing its defaults; e.g. &quot;Default Font&quot; = &quot;Helvetica&quot;. Keys are strings, values can be complex data structures comprising arrays, dictionaries, strings, and binary data. They&apos;re stored as XML Property List.&lt;/p&gt;
&lt;p&gt;每个域都有一个由键和值组成的字典，代表其默认值；例如，&quot;默认字体&quot;=&quot;Helvetica&quot;。键是字符串，值可以是由数组、字典、字符串和二进制数据组成的复杂数据结构。它们以 XML 属性列表的形式存储。&lt;/p&gt;
&lt;p&gt;The defaults command line interface is a way to interact with these values.&lt;/p&gt;
&lt;p&gt;defaults 命令行界面是与这些值交互的一种方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;链接地址是一份 macOS default list 的整理，如果之后会换新的一台 macOS 的电脑的话，我会尝试使用 default 控制这些默认行为，并且编写成脚本，而不是修改 System Preferences。这样在切换到新设备时，只需要执行脚本就可以获得相同的体验了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://macos-defaults.com/&quot;&gt;macOS defaults list&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;聊天软件上的女生&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;聊天软件上的女性都不缺聊天的人，她们也享受被男人舔的感觉，而你，我的朋友，你是被筛掉的一批人，她在等你自觉无趣的时候停止发消息，你在等什么呢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在找对象的这段时间里的经历是，大部分的女生，只要我不主动发消息就等于断联。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.do/t/topic/484928/5&quot;&gt;哭了佬友求安慰 - 搞七捻三 - LINUX DO&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;spaceship 域名注册&lt;/h3&gt;
&lt;p&gt;来一份 AI 的话题总结：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用户纯水在网页上分享了自己在 Spaceship 购买域名并托管到 Cloudflare 后， accounts 被封禁和域名被取消的经历。用户在睡觉后醒来发现这一情况，并且对此感到惊讶，因为自己没有进行任何违规操作，如反代 GitHub 等。Spaceship 团队给出的解释是认为用户的服务被创建用于滥用目的，尽管用户承认反代 GitHub，但这一行为是两个月前就被取消的，而账号当时并未被封禁。用户对此感到无法接受，并已经发送邮件进行辩论，甚至考虑向 ICANN 投诉。其他网友在评论中表达了对 Spaceship 的担忧，有的建议慎重选择域名服务商，有的分享了自己的类似经历，以及对 Spaceship 和 Namecheap 关系的讨论。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看了这个帖子，当时很快就把 guanglai.me 的域名注册商修改到 cloudflare 吧，就是害怕万一帐号被封了，我就难受了。结果惊讶的发现，cloudflare 上，我的域名一年费用比 spaceship 都便宜。每次迁移到新的域名服务商的时候都需要续费一年的域名，由于域名经过了两次域名服务商的迁移，我的域名已经续费到了 2027 年 11 月份。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.do/t/topic/486137&quot;&gt;吐槽spaceship - 搞七捻三 - LINUX DO&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;AI 辅助编程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我司给所有技术和测试序列的同学全部购买 Copilot Business，并且提供额外的 OpenAI 全系 + 按需申请 Gemini、Claude 等模型自行使用。&lt;/p&gt;
&lt;p&gt;全部门，要求，所有开发同学必须使用 Copilot 辅助编码，有专门的 Copilot Dashboard 统计所有人的对话次数、AI 代码接受率等，从多维度评估开发同学的 AI 提效率。但暂时还没有对应的行政手段来对 AI 使用率低的开发同学采取什么措施，但是听说快了。&lt;/p&gt;
&lt;p&gt;我们项目组：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要求，所有开发同学不管前后端必须使用 VS Code（因为 vsc 上的 Copilot 才是完全体，预览版可以使用 Agent 模式），不允许在日常开发中使用脑浆炸裂社的 IDE。&lt;/li&gt;
&lt;li&gt;要求，所有 QA 测试同学，必须使用内部的 AI 测试用例生成工具，只允许传送需求文档给 AI 以及自然语言描述测试点，不允许手动编写测试用例。&lt;/li&gt;
&lt;li&gt;提供，在全部门的 Copilot Business 的基础上单独在本组购买 GitHub Enterprise，所有项目迁徙到 GE，使用 Copilot Workspace 对需求进行初步的自动规划和开发，再使用 Copilot 进行精细修改。&lt;/li&gt;
&lt;li&gt;提供，组内成员认为一切合理的 AI 工具，包括 CodeParrot、Builder.io、v0.dev 等AI 开发工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前来看成效：本组内 AI 生成的直接可用代码 60% 以上；QA 同学提效 30% 以上，等到内部的自动化测试 Agent 开发完毕预计至少能再提效 20%-30%。&lt;/p&gt;
&lt;p&gt;总结：
好处：我司舍得花钱，愿意培养开发同学和测试同学的 AI 使用习惯和技能。
坏处：低职级的开发同学陆续被优化，因为他们的工作可以被 AI 替代，并且完成的比他们还好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也算是实际了解到了真实公司使用 AI 编程工具的现状，我司现在并没有任何帮助员工购买 AI 工具的情况。我司之前有购买过 GitHub Copilot 的团队版本，不过也只是开白名单给了少数几个同事试用，后面就再无下文，并且已经是一年多之前的事情了，AI 在这一年多的时间里又经过了一翻大发展。我了解到的是，我朋友的公司倒是给他们购买了 GitHub Copilot 的商业版本，并且还购买了 Microsoft Copilot，真是让人羡慕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.do/t/topic/493196/8&quot;&gt;有没有软件公司现在要求员工工作中必须使用ai编程辅助的？ - 搞七捻三 - LINUX DO&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;美团 IP 地址库&lt;/h3&gt;
&lt;p&gt;我算是知道美团为什么能够通过 IP 地址确定外卖的收货地址了，原来已经根据 ip 和地址做了数据库映射，而且接口还被人公开了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.do/t/topic/491600&quot;&gt;近期IP溯源，不知道多少佬友溯源成功了。 - 搞七捻三 / 搞七捻三, Lv1 - LINUX DO&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;discourse 论坛&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Discourse is the 100% open source discussion platform built for the next decade of the Internet. We make it easy to have meaningful conversations and collaborate anytime, anywhere.
Discourse 是为互联网下一个十年打造的 100% 开源讨论平台。我们让随时随地进行有意义的对话和协作变得更容易。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里有使用 discourse 搭建的简体中文论坛的列表，还蛮有意思的。我过去使用过的论坛，emacs-china, cursor-forum 之类的论坛都是使用 discourse 搭建的，当然，还有 linuxdo。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://discover.discourse.org/&quot;&gt;Discourse Discover&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;AI IDE 的使用建议&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;AI IDE 的话，可以试试 Windsurf ，我就用的这个。每月 15 刀（我是第一天就注册的早期用户，永久维持每月 10 刀价格）。个人感觉比 Cursor 舒服多了，Cursor 经常 Agent 一小时过去：很忙，但不知道在忙什么。Windsurf 这边思路就非常清晰，十五分钟出雏形。&lt;/p&gt;
&lt;p&gt;我目前是最喜欢拿 Claude 3.7 Sonnet 做纯前端开发，做一些给自己用的小工具，好用的话，收集一些建议，就发到 GitHub 上以 GPLv3 证书开源分享。&lt;/p&gt;
&lt;p&gt;当然，我这个人非常有耐心，确实是废寝忘食级别的，做 LLM API 比价器那次忙前忙后半个月……&lt;/p&gt;
&lt;p&gt;看你似乎还是和我一样，出于兴趣折腾的？如果不盈利的话，就和我一样，随便搞搞就挺好了。盈利那我就没什么经验给你了。&lt;/p&gt;
&lt;p&gt;最主要的还是放平心态，要能接受失败，沉得住气。并且最好别看 b 站啊，小红书啊什么上面分享的你说的那种一小时 xxx 的视频，没啥意义，做自己的东西就好！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AI IDE 的建议，很受用。我也是 windsurf 早期注册用户，不过后面没怎么用了。我现在算是 github copilot, trae, cursor 都一定程度上使用过了。前段时间看 windsurf 的月费，确实比 cursor 便宜一半，这段时间打算也再体验试一试。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.do/t/topic/493254/13&quot;&gt;佬们，用的 ai 工具越多，我越发现捷径不好走 - 搞七捻三 - LINUX DO&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>已读乱码 007</title><link>https://blog.guanglai.me/posts/what-is-guanglai-doing-this-week-007/</link><guid isPermaLink="true">https://blog.guanglai.me/posts/what-is-guanglai-doing-this-week-007/</guid><description>这里是已读乱码的第七期，这周也是感觉做了很多，但是什么也没做的一周。这周更加深入地使用和了解了 AI，基本上形成了自己使用 AI 的方式。买了一个便宜的 VPS，使用阿里云 OSS 搭建了一个个人图床。</description><pubDate>Sat, 14 Jun 2025 13:45:03 GMT</pubDate><content:encoded>&lt;p&gt;这里是已读乱码的第七期，这周也是感觉做了很多，但是什么也没做的一周。这周更加深入地使用和了解了 AI，基本上形成了自己使用 AI 的方式。买了一个便宜的 VPS，使用阿里云 OSS 搭建了一个个人图床。&lt;/p&gt;
&lt;h2&gt;先看看猫&lt;/h2&gt;
&lt;p&gt;不过猫不是我的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images-oss.guanglai.me/2025/naiyou-250112.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;还是 AI&lt;/h2&gt;
&lt;p&gt;我现在常用的 AI 服务如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chat GPT&lt;/li&gt;
&lt;li&gt;Deepseek&lt;/li&gt;
&lt;li&gt;Google Gemini&lt;/li&gt;
&lt;li&gt;Github Copilot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chat GPT 使用桌面客户端，Option + Space 快捷键唤起，简单问个问题比 Google 更加方便和快速。Chat GPT 现在基本模型是免费的，只是日常使用的话完全够用，没有必要升级到 plus 版本，并且大陆用户现在也不需要额外的方式，就可以直接使用。&lt;/p&gt;
&lt;p&gt;Deepseek 的网页聊天页面功能虽然很简陋，但是日常使用还是没有什么问题的，作为 GPT 的替代场景是足够的。&lt;/p&gt;
&lt;p&gt;Deepseek 的另外的主要使用场景是一些软件需要 LLM API 作为基座提供功能的场景。Deepseek 能够提供非常便宜的 API token，需要使用 API key 的场景，基本就借助 Deepseek。目前主要在用的是 Chrome 扩展，沉浸式翻译和 VS Code 扩展 Roo Cline。&lt;/p&gt;
&lt;p&gt;沉浸式翻译基本上是现在在 Chrome 扩展中最好用的翻译扩展了，当然这只是我个人观点，没有数据佐证。默认沉浸式翻译是使用谷歌翻译，网易翻译之类的免费翻译，这部分能力也是内置在扩展里的。如果需要通过大模型翻译，有两种方式。一种是升级会员，另一种是使用用户个人提供的大模型 API token。一般来说，大部分的语言模型的 API 都是 Open AI 兼容的，所以基本也都可以使用。&lt;/p&gt;
&lt;p&gt;Roo Cline 则是在 VS Code 编程中，使用起来非常方便的大语言模型编程扩展。不过受限于 Deepseek 的 API 时不时抽风的特点，有时候的请求非常快速，有时候的请求则非常慢，要在 API request 页面转圈几分钟到十几分钟，才能完成一次请求，实在是无法忍受。这里猜测的原因应该是 Deepseek 非常便宜，导致大量人群使用 Deepseek，导致 Deepseek 流量暴涨。尤其是在晚上的时候，请求尤其卡顿，根本无法用于辅助编程。Deepseek 官方虽然说不会限制 API 的请求速率，依我看来，是有点有心无力了。&lt;/p&gt;
&lt;p&gt;既然 Deepseek 没有办法了，那么有没有替代品呢？有，Google Gemini 2.0 flash，谷歌的 gemini 2.0 目前是体验版本，2.0 系列的模型目前都是免费体验的，至于免费到什么时间？不知道，能用就先用着。有两个 API，&lt;code&gt;gemini-2.0-flash-exp&lt;/code&gt;， &lt;code&gt;gemini-exp-1206&lt;/code&gt; 是比较强的模型，推荐使用。但是直接使用是有点问题的，需要中转一下。Github 上就有人开源了一个&lt;a href=&quot;https://github.com/PublicAffairs/openai-gemini&quot;&gt;项目&lt;/a&gt;，通过 cloudflare worker 中转一下 gemini 的 API。这里 cloudflare worker 做了两件事情。第一件是 gemini 不支持中国大陆使用。第二件是 gemini 的 API 接口不兼容 Open AI。不过，官方文档里，不止支持 cloudflare，只是对我来说 cloudflare 最为方便。cloudflare 当真是赛博菩萨，让我们谢谢 cloudflare。&lt;/p&gt;
&lt;p&gt;有了 Gemini 的 API 之后，就可以和 Deepseek 一样，在 Roo cline 中使用了。并且 Roo cline 是支持多种配置的，同时配置两个，当 Deepseek 不可用的时候，就采用备用方案 Gemini。另一方面，Deepseek 因为上下文比起其他模型是在是太短了，尝试在 Cursor 中使用，基本是不可用的。Gemini 则是可以的。&lt;/p&gt;
&lt;p&gt;最后就是我们的老朋友 Github Copilot 了。在 Jetbrains 系列的编程 IDE 上，基本上没有什么好用的，类似 Roo Cline 的接入第三方 API key 的大模型辅助编程插件。Jetbrains 系列的 IDE 是有这类插件的，但是我尝试了之后，发现至少在我的体验下是不可用的。那么只剩下一些官方提供的了。比如 Jetbrains AI assistant，Github Copilot 等等，Jetbrains AI assistant 国内是使用的文心一言的 API，Pass。那么可用的也只剩下 Github Copilot 了。不过能用的场景有限。Copilot 现在每月也有免费额度，作为兜底使用的 AI 编程插件，足够使用了。&lt;/p&gt;
&lt;p&gt;以上，就是我目前正在使用的 AI 了。也算是跟上了 AI 的潮流了。&lt;/p&gt;
&lt;p&gt;那么我用 AI 做了那些事情呢？两类事情 AI 是直接刷新了我的认知的。一类事情是问答类的事情，先前如果我们有什么不懂的，基本就是搜索引擎，或者特定网站搜索关键字，运气好的话，可以找到很好的解答。运气不好的话，一无所获。而且这类事情非常花费时间。那么现在呢，基本上我在碰到不懂的概念的时候，就会先去尝试问下 AI，大部分的时候都能够得到足够好的回复。并且在学习的时候，尤其好用。学习的能力在 AI 的帮助下现在是 up up 了。不过也要警惕 AI 提供的知识，并不是完全可信的。&lt;/p&gt;
&lt;p&gt;第二件事情是编程类的事情。一方面，我现在碰到复杂点的程序，就会丢给 AI，让 AI 帮忙解释下这段程序的含义，有时是学习的时候，因为是自己不了解的领域，用 AI 辅助学习。有时是，因为我需要使用到这段代码，但是又不知道这段代码的含义，就让 AI 帮忙分析下，是否有恶意的成分在，避免被攻击。另一方面，我用编程开发了一款 Chrome 扩展，基本上是抱着学习的目的。在我学习完成的现代前端的大部分技术栈，只是简单了解的情况下，和 AI 描述需求，在自己的理解下，开发完成了一款 Chrome 扩展。确实有现今的一个段子的味道了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我不会编程，但是靠 cursor，编写了一个 iOS APP，并且上架了 APP Store&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然了，我是会编程的，还是个老后端程序员了。如果不会编程，我大概连提问 AI 都不知道该提问些什么，即使是有 AI 的帮助，还是需要前置知识的辅助的。提这个也不是想要说明什么，只是觉得有点意思，最近确实很多人有点过于炒作 AI 编程和制造焦虑了。AI 确实大大降低了我的心智负担，但是目前还只是辅助的能力。当真的 AI 哪一天不再是 Copilot 了，而是能够掌舵了，那么大家就都可以下岗了，你我都不例外。所以没什么可以焦虑了，那个时候，我们都可以去捡瓶子，睡大街了。现在？现在拥抱 AI，让 AI 做好 Copilot 的工作就可以了，我们是下指令的。&lt;/p&gt;
&lt;h2&gt;杂项&lt;/h2&gt;
&lt;p&gt;这周主要就是沉浸在 AI 给我的震撼上了，深度体验了 AI 的方方面面。不过还有一些有待我的探索。文生图，文生视频，AI 实时语音通过，视频识别，这些就留待以后探索吧。&lt;/p&gt;
&lt;p&gt;这周还做了些什么事情呢？我购买了一个 VPS，价格非常便宜，7刀/第一年，1 Core，1GiB，RAM 20 GiB Storage，还是比较划算的。之后如果我有什么想要部署的，会用下这个 VPS。我也许不用，但是还是需要一个 VPS 的。购买之后，也写了一个购买服务器之后的 SOP，有机会会整理一下分享出来，不过主要是参考别人的文章，做了一点自己的小小的修改。&lt;/p&gt;
&lt;p&gt;这周也看了很多的博客，没看什么书，没学什么习。我发现还是有很多人在维护和编写个人博客的。现在大家都被困在各类 APP 的信息茧房里，还有很多人坚持写博客，也是独树一帜了。博客不会被大平台管控，我个人也是很喜欢的，只是是需要一点门槛的。所以即使在各类博客平台上写些什么的人，也是很厉害的。只要在写些什么，那就是有输出的。输出重要的不是什么形式，什么平台，我们需要去创造写什么，浪费才华，才不会空有品位。&lt;/p&gt;
&lt;p&gt;这周也搭建了个人图床，以后就不再使用本地图片了。编写文章，转换各种格式到不同平台就更加方便了。我现在写完博客之后，还会存档一份内容到微信公众号。之前图片都是在转换之后，手动上传到微信公众号的，现在就不太需要了。写完博客之后，转换到其他平台的格式 easy easy。个人图床的搭建的话，主要还是阿里云 OSS，加上本地的客户端 PicGo。阿里云我使用的是新加坡的标准本地冗余，每月 40G，一年的费用只需要 9 元，等于白送了。&lt;/p&gt;
&lt;p&gt;下周的话，还是多学习学习，我要准备找工作啦。两手抓，一手学习找工作，一手学习做网站。&lt;/p&gt;
&lt;h2&gt;最后&lt;/h2&gt;
&lt;p&gt;最后，如果真的有人能看到这里的话，感谢你的耐心。我的微信公众号目前是没有流量和关注的，而且博客并没有被 Google 搜录，所以我估计真的有人访问的话，也要很久之后了。即使没什么看，我也还是要继续写哒，未来的我，也是读者之一。我们下周见。&lt;/p&gt;
</content:encoded></item></channel></rss>